<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>runtime</artifactId>
        <groupId>com.github.zelmothedragon.happi-explorer</groupId>
        <version>0.0.14-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>wildfly-runtime</artifactId>
    <packaging>war</packaging>
    <name>wildfly-runtime</name>
    <description>Wildfly runtime for happi-explorer-example</description>

    <properties>
        <!-- Server -->
        <version.wildfly>27.0.0.Final</version.wildfly>
        <wildfly.archive.name>wildfly-${version.wildfly}.zip</wildfly.archive.name>
        <wildfly.download.url>
            https://github.com/wildfly/wildfly/releases/download/${version.wildfly}/${wildfly.archive.name}
        </wildfly.download.url>

        <!-- Jakarta -->
        <version.group.hibernate>5.5.9.Final</version.group.hibernate>

        <!-- Configuration -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <skipITs>false</skipITs>
    </properties>

    <dependencyManagement>
        <!-- TODO: A Wildfly distribution from Maven repository will be good... -->
    </dependencyManagement>

    <dependencies>
        <!-- Module -->
        <dependency>
            <groupId>com.github.zelmothedragon.happi-explorer</groupId>
            <artifactId>happi-explorer</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.zelmothedragon.happi-explorer</groupId>
            <artifactId>happi-explorer-example</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Jakarta Platform -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- JPA Metamodel -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen-jakarta</artifactId>
            <version>${version.group.hibernate}</version>
            <scope>provided</scope>
        </dependency>

        <!-- === TEST === -->
        <dependency>
            <groupId>com.github.zelmothedragon.happi-explorer</groupId>
            <artifactId>rest-scenario</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <version>${version.jakarta.json-api}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.json.bind</groupId>
            <artifactId>jakarta.json.bind-api</artifactId>
            <version>${version.jakarta.json.bind-api}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <configuration>
                    <skip>${skipITs}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>download-server</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="download-server">
                                <ant antfile="src/ant/build.xml"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${version.java}</release>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.hibernate</groupId>
                            <artifactId>hibernate-jpamodelgen-jakarta</artifactId>
                            <version>${version.group.hibernate}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <overwrite>true</overwrite>
                    <resources>
                        <resource>
                            <directory>src/main/resources</directory>
                            <filtering>true</filtering>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                    <additionalClasspathElements>
                        <additionalClasspathElement>src/test/resources</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipITs>${skipITs}</skipITs>
                    <additionalClasspathElements>
                        <additionalClasspathElement>src/test/resources</additionalClasspathElement>
                    </additionalClasspathElements>
                    <excludes>
                        <exclude>**/*Test.java</exclude>
                    </excludes>
                    <includes>
                        <include>**/*IT.java</include>
                        <include>**/*IT*.java</include>
                        <include>**/*ITCase.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>webapp-integration</id>
                        <goals>
                            <goal>verify</goal>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven3-plugin</artifactId>
                <executions>
                    <execution>
                        <id>webapp-start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>webapp-stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <container>
                        <containerId>wildfly27x</containerId>
                        <zipUrlInstaller>
                            <url>file:///${project.build.directory}/${wildfly.archive.name}</url>
                            <downloadDir>${project.build.directory}/downloads</downloadDir>
                            <extractDir>${project.build.directory}/extracts</extractDir>
                        </zipUrlInstaller>
                    </container>
                    <deployables>
                        <deployable>
                            <groupId>com.github.zelmothedragon.happi-explorer</groupId>
                            <artifactId>wildfly-runtime</artifactId>
                            <type>war</type>
                            <properties>
                                <context>/example</context>
                            </properties>
                        </deployable>
                    </deployables>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>